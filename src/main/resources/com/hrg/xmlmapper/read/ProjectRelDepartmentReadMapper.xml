<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hrg.javamapper.read.ProjectRelDepartmentReadMapper" >
  <resultMap id="BaseResultMap" type="com.hrg.model.ProjectRelDepartment" >
    <id column="dataid" property="dataid" jdbcType="VARCHAR" />
    <result column="projectid" property="projectid" jdbcType="VARCHAR" />
    <result column="departmentid" property="departmentid" jdbcType="VARCHAR" />
    <result column="percentage" property="percentage" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="HashMapBaseResultMap" type="hashmap" >
    <id column="dataid" property="dataid" jdbcType="VARCHAR" />
    <result column="projectid" property="projectid" jdbcType="VARCHAR" />
    <result column="departmentid" property="departmentid" jdbcType="VARCHAR" />
    <result column="percentage" property="percentage" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <if test="example.dataid != null" >
         and dataid = #{example.dataid,jdbcType=VARCHAR}
      </if>
      <if test="example.dataidList != null  and  example.dataidList.size() > 0 " >
         and dataid in 
        <foreach collection="example.dataidList" item="listItem" open="(" close=")" separator="," >
          #{listItem}
        </foreach>
      </if>
      <if test="example.projectid != null" >
         and projectid = #{example.projectid,jdbcType=VARCHAR}
      </if>
      <if test="example.projectidList != null  and  example.projectidList.size() > 0 " >
         and projectid in 
        <foreach collection="example.projectidList" item="listItem" open="(" close=")" separator="," >
          #{listItem}
        </foreach>
      </if>
      <if test="example.departmentid != null" >
         and departmentid = #{example.departmentid,jdbcType=VARCHAR}
      </if>
      <if test="example.departmentidList != null  and  example.departmentidList.size() > 0 " >
         and departmentid in 
        <foreach collection="example.departmentidList" item="listItem" open="(" close=")" separator="," >
          #{listItem}
        </foreach>
      </if>
      <if test="example.percentage != null" >
         and percentage = #{example.percentage,jdbcType=VARCHAR}
      </if>
      <if test="example.percentageList != null  and  example.percentageList.size() > 0 " >
         and percentage in 
        <foreach collection="example.percentageList" item="listItem" open="(" close=")" separator="," >
          #{listItem}
        </foreach>
      </if>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    dataid, projectid, departmentid, percentage
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="map" >
    select
    <if test="example.distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from hrg_project_rel_department
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null" >
      order by ${example.orderByClause}
    </if>
    <if test="example.limitStart >= 0 and example.pageSize > 0 " >
      limit #{example.limitStart} , #{example.pageSize}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="map" >
    select 
    <include refid="Base_Column_List" />
    from hrg_project_rel_department
    where dataid = #{dataid,jdbcType=VARCHAR}
  </select>
  <select id="countByExample" parameterType="map" resultType="java.lang.Integer" >
    select count(*) from hrg_project_rel_department
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <select id="selectByExampleForOne" resultMap="BaseResultMap" parameterType="map" >
    select
    <if test="example.distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from hrg_project_rel_department
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null" >
      order by ${example.orderByClause}
    </if>
     limit 0 , 1 
  </select>
  <select id="selectMapByPrimaryKey" resultMap="HashMapBaseResultMap" parameterType="map" >
    select
    <include refid="Base_Column_List" />
    from hrg_project_rel_department
    <where >
       and dataid=#{dataid,jdbcType=VARCHAR}
    </where>
  </select>
  <select id="selectMapByExampleForOne" resultMap="HashMapBaseResultMap" parameterType="map" >
    select
    <if test="example.distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from hrg_project_rel_department
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null" >
      order by ${example.orderByClause}
    </if>
     limit 0 , 1 
  </select>
  <select id="selectMapByExample" resultMap="HashMapBaseResultMap" parameterType="map" >
    select
    <if test="example.distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from hrg_project_rel_department
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null" >
      order by ${example.orderByClause}
    </if>
    <if test="example.limitStart >= 0 and example.pageSize > 0 " >
      limit #{example.limitStart} , #{example.pageSize}
    </if>
  </select>
</mapper>